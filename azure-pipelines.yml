# pool:
#   name: Default
#   demands: java

# #Your build pipeline references an undefined variable named ‘Parameters.projects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
# #Your build pipeline references an undefined variable named ‘Parameters.Test.projects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
# #Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

# steps:
# - task: DotNetCoreCLI@2
#   displayName: Restore
#   inputs:
#     command: restore
#     projects: '$(Parameters.projects)'

# - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
#   displayName: 'Prepare analysis on SonarCloud'
#   inputs:
#     SonarCloud: sonarcloud
#     organization: '1902-feb18-net'
#     projectKey: BAM1902trivia
#     projectName: BAMTriviaProject2

# - task: DotNetCoreCLI@2
#   displayName: Build
#   inputs:
#     projects: '**/*.sln'
#     arguments: '--configuration $(BuildConfiguration) --no-restore'

# - script: dotnet test **/*Test*.csproj
#     --configuration $(buildConfiguration)
#     --logger trx
#     --no-build
#     --results-directory $(Build.ArtifactStagingDirectory)/test
#     /p:CollectCoverage=true
#     /p:CoverletOutputFormat=opencover
#     /p:CoverletOutput='$(Build.ArtifactStagingDirectory)/coverage/'
#     /p:Exclude="[xunit*]*"
#   workingDirectory: BAMTriviaProject2
#   displayName: Test

# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: VSTest
#     testResultsFiles: '*'
#     searchFolder: $(Build.ArtifactStagingDirectory)/test
#   displayName: Publish test results

# # - task: DotNetCoreCLI@2
# #   displayName: Test
# #   inputs:
# #     command: test
# #     projects: '$(Parameters.Test.projects)'
# #     arguments: '--configuration $(BuildConfiguration)'

# - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
#   displayName: 'Run Code Analysis'

# - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
#   displayName: 'Publish Quality Gate Result'

# - task: DotNetCoreCLI@2
#   displayName: Publish
#   inputs:
#     command: publish
#     publishWebProjects: false
#     projects: '**/BAMTriviaProject2.WebAPI.csproj'
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
#     modifyOutputPath: false

# - task: AzureRmWebAppDeployment@4
#   displayName: 'Azure App Service Deploy: BAM1902trivia'
#   inputs:
#     azureSubscription: 'Free Trial (74f13f66-859f-4fdc-8afa-2eabf78271b5)'
#     WebAppName: BAM1902trivia
#     packageForLinux: '$(Build.ArtifactStagingDirectory)/publish'
#   enabled: false
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
#   condition: succeededOrFailed()

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - 05-web-services/CharacterRestService

pool:
  name: Default

variables:
  buildConfiguration: Debug
  solutionDir: 05-web-services/CharacterRestService

steps:
- script: dotnet restore
  workingDirectory: $(solutionDir)
  displayName: Restore

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  inputs:
    SonarCloud: sonarcloud
    organization: 1902-feb18-net
    projectKey: escalona1902charapi
    projectName: CharacterSiteAPI
    extraProperties: |
      sonar.cs.opencover.reportsPaths="$(Build.ArtifactStagingDirectory)/coverage/*"
      sonar.cs.vstest.reportsPaths="$(Build.ArtifactStagingDirectory)/test/*"
  displayName: Prepare analysis on SonarCloud

- script: dotnet build
    --configuration $(buildConfiguration)
    --no-restore
  workingDirectory: $(solutionDir)
  displayName: Build

- script: dotnet test **/*Test*.csproj
    --configuration $(buildConfiguration)
    --logger trx
    --no-build
    --results-directory $(Build.ArtifactStagingDirectory)/test
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput='$(Build.ArtifactStagingDirectory)/coverage/'
    /p:Exclude="[xunit*]*"
  workingDirectory: $(solutionDir)
  displayName: Test

- task: PublishTestResults@2
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '*'
    searchFolder: $(Build.ArtifactStagingDirectory)/test
  displayName: Publish test results

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: Run code analysis

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: Publish quality gate result

- script: dotnet publish **/CharacterRestService.csproj
    --configuration $(buildConfiguration)
    --no-build
    --output $(Build.ArtifactStagingDirectory)/publish
  workingDirectory: $(solutionDir)
  displayName: Publish

- task: AzureRmWebAppDeployment@4
  displayName: Azure App Service deploy
  inputs:
    azureSubscription: nick-azure
    WebAppName: escalona1902charapi
    packageForLinux: $(Build.ArtifactStagingDirectory)/publish
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: Publish artifact
